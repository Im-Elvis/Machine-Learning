# -*- coding:utf-8 -*-
"""
@author:JiaDong
@file:linear_regression.py
@time:2018/11/28 18:23
"""
import numpy as np
import matplotlib.pyplot as plt

def model(a, b, x):
    return a*x + b

def cost_function(a, b, x, y):
    n = 5
    return 0.5/n * (np.square(y-a*x-b)).sum()

def optimize(a,b,x,y,alpha):
    n = 5
    y_hat = model(a,b,x)
    da = (1.0/n) * ((y_hat-y)*x).sum()
    db = (1.0/n) * ((y_hat-y).sum())
    a = a - alpha*da
    b = b - alpha*db
    return a, b

x = np.array([2,2.5,3.5,4,5,7])
y = np.array([2,2.1,4,4.5,5,9])
a=-2
b=10

loop_n = 100000
alpha = 0.005

plt.scatter(x,y)

for i in range(loop_n):
    a,b = optimize(a,b,x,y,alpha)
    print('score:'+str(cost_function(a, b, x, y)))
    print(a,b)

x = range(10)
y = model(a,b,x)
plt.plot(x,y)
plt.show()
